@use "default-function" as *;
@use "default-variable" as *;
@use "sass:string";
@use "sass:map";
@use "sass:meta";
@use "sass:list";

// =============================================================================
// Font Face
// =============================================================================

@mixin font-face(
    $name,
    $path,
    $weight: null,
    $style: null,
    $exts: eot woff2 woff ttf svg
) {
    $src: null;

    $extmods: (
        eot: "?",
        svg: "#" + str-replace($name, " ", "_"),
    );

    $formats: (
        otf: "opentype",
        ttf: "truetype",
        woff: "woff",
        woff2: "woff2",
    );

    @each $ext in $exts {
        $extmod: if(
            map.has-key($extmods, $ext),
            $ext + map.get($extmods, $ext),
            $ext
        );
        $format: if(map.has-key($formats, $ext), map.get($formats, $ext), $ext);
        $src: list.append(
            $src, url(string.quote("/assets/fonts/poppins/" + $path + "." + $extmod)) format(string.quote($format)), comma
        );
    }

    @font-face {
        font-family: string.quote($name);
        font-style: $style;
        font-weight: $weight;
        font-display: block;
        src: $src;
    }
}

// @require $breakpoints
// 1em = 16px;
@mixin respond($breakpoint) {
    // If the key exists in the map
    @if map.has-key($breakpoints, $breakpoint) {
        // Prints a media query based on the value
        @media #{meta.inspect(map.get($breakpoints, $breakpoint))} {
            @content;
        }
    }
    // If the key doesn't exist in the map
    @else {
        @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. " + "Available breakpoints are: #{map.keys($breakpoints)}.";
    }
}

@mixin minRespond($sizes) {
    @media screen and (min-width: #{$sizes}px) {
        @content;
    }
}
@mixin maxRespond($sizes) {
    @media screen and (max-width: #{$sizes}px) {
        @content;
    }
}
@mixin minmaxRespond($lower, $upper) {
    // Write the media query.
    @media (min-width: #{$lower}px) and (max-width: #{$upper}px) {
        @content;
    }
}
@mixin phoneLandscapeRespond($value) {
    // Write the media query.
    @media (max-width: #{$value}px) and (orientation: landscape) {
        @content;
    }
}




@mixin border-radius($values...) {
    @each $var in $values {
        border-radius: #{$var};
    }
}

// For ScrollBar Css

@mixin scrollbar {
    scrollbar-color: $default-color-red $default-color-whitelight2;
    scrollbar-width: thin;
    border-radius: 5px;
    &::-webkit-scrollbar {
        width: 5px;
        height: 2px;
        border-radius: 5px;
    }
    &::-webkit-scrollbar-track {
        border-radius: 5px;
        background-color: $default-color-whitelight;
    }
    &::-webkit-scrollbar-thumb {
        border-radius: 5px;
        background-color: $default-color-red;
    }
}
@mixin scrollbarCart {
    scrollbar-color: $default-color-dark $default-color-whitelight2;
    scrollbar-width: thin;
    &::-webkit-scrollbar {
        width: 5px;
    }
    &::-webkit-scrollbar-track {
        -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);
    }
    &::-webkit-scrollbar-thumb {
        background-color: $default-color-dark;
    }
}
@mixin scrollbarCheckout {
    scrollbar-color: $default-color-darklight3 $default-color-whitelight2;
    scrollbar-width: thin;
    &::-webkit-scrollbar {
        width: 3px;
    }
    &::-webkit-scrollbar-track {
        // -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);
        background-color: $default-color-whitelight2;
    }
    &::-webkit-scrollbar-thumb {
        background-color: $default-color-darklight3;
    }
}
@mixin scrollbarPrice {
    scrollbar-color: $default-color-darklight2 $default-color-whitelight;
    scrollbar-width: thin;
    &::-webkit-scrollbar {
        width: 8px;
        height: 2px;
    }
    &::-webkit-scrollbar-track {
        background-color: $default-color-whitelight;
    }
    &::-webkit-scrollbar-thumb {
        background-color: $default-color-darklight2;
    }
}
@mixin scrollbarPDP {
    scrollbar-color: $default-color-darklight2 $default-color-whitelight;
    scrollbar-width: thin;
    &::-webkit-scrollbar {
        width: 5px;
        height: 3px;
    }
    &::-webkit-scrollbar-track {
        background-color: $default-color-whitelight;
    }
    &::-webkit-scrollbar-thumb {
        background-color: $default-color-orange;
    }
}

// For transition css
@mixin transition($x...) {
    -webkit-transition: $x;
    -moz-transition: $x;
    -ms-transition: $x;
    -o-transition: $x;
    transition: $x;
}
@mixin keyframes($name) {
    @-webkit-keyframes #{$name} {
        @content;
    }
    @-moz-keyframes #{$name} {
        @content;
    }
    @-ms-keyframes #{$name} {
        @content;
    }
    @keyframes #{$name} {
        @content;
    }
}
